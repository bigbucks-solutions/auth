// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Jamsheed",
            "url": "http://www.swagger.io/support",
            "email": "jamsheed@nsmail.dev"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/master-data/actions": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions"
                ],
                "summary": "Get actions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "X-Auth",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/master-data/resources": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions"
                ],
                "summary": "Get resources",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "X-Auth",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/master-data/scopes": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions"
                ],
                "summary": "Get scopes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "X-Auth",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/me": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get logged in user profile information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "X-Auth",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "schema": {
                            "$ref": "#/definitions/types.UserInfo"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/permissions": {
            "post": {
                "description": "Create a new permission in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions"
                ],
                "summary": "Create new permission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "X-Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Permission object",
                        "name": "permission",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreatePermissionBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "description": "Get paginated list of roles with user count",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "List roles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "X-Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by role name",
                        "name": "role_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.ListRolesPagedResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new role in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Create new role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "X-Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Role object",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bigbucks_solution_auth_rest-api_controllers_types.Role"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/roles/bind-permission": {
            "post": {
                "description": "Associates a permission with a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Bind permission to role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "X-Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Binding details",
                        "name": "rolepermission",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.RolePermissionBindingBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission bound successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/roles/bind-user": {
            "post": {
                "description": "Associates a role with a user in an organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Bind role to user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "X-Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "User role binding details",
                        "name": "binding",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UserRoleBindingBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role bound to user successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/roles/unbind-permission": {
            "post": {
                "description": "Removes a permission with a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "UnBind permission to role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "X-Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "UnBinding details",
                        "name": "rolepermission",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.RolePermissionBindingBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission unbound successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/roles/unbind-user": {
            "post": {
                "description": "Removes a role with a user in an organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "UnBind role to user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "X-Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "User role binding details",
                        "name": "binding",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UserRoleBindingBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role bound to user successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/roles/{role_id}": {
            "put": {
                "description": "Update an existing role in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Update existing role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "X-Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "role_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Role object",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bigbucks_solution_auth_rest-api_controllers_types.Role"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            },
            "delete": {
                "description": "Delete an existing role if it has no associated users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Delete existing role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "X-Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "role_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.SimpleResponse"
                        }
                    },
                    "400": {
                        "description": "Role has associated users",
                        "schema": {
                            "$ref": "#/definitions/types.SimpleResponse"
                        }
                    },
                    "404": {
                        "description": "Role not found",
                        "schema": {
                            "$ref": "#/definitions/types.SimpleResponse"
                        }
                    }
                }
            }
        },
        "/roles/{role_id}/permissions": {
            "post": {
                "description": "Lists permissions of a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "List permission of a role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "X-Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "role_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.ListRolePermission"
                            }
                        }
                    }
                }
            }
        },
        "/sessions/users/{user_id}": {
            "get": {
                "description": "List User sessions for provided userId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "List User session for provided userId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "X-Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of user sessions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sessions/{session_id}": {
            "delete": {
                "description": "Revokes a specific session by session ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Revoke a specific user session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "X-Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Session ID to revoke",
                        "name": "session_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/signin": {
            "post": {
                "description": "Authenticate user with password and issue jwt token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Authenticate with username and pssword",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.JsonCred"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JWT token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {}
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Create a new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User signup details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.SignupRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "$ref": "#/definitions/types.SimpleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {}
                    }
                }
            }
        },
        "/user/authorize": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Check user have permission",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CheckPermissionBody"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "X-Auth",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.AuthorizeResponse"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/user/changepassword/{token}": {
            "post": {
                "description": "Reset the password with the password reset token sent to email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Reset the password with the password reset token sent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.ResetPassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/user/reset": {
            "post": {
                "description": "Get password reset token to email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Send the password reset token",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.RequestPasswordResetToken"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return message",
                        "schema": {
                            "$ref": "#/definitions/types.SimpleResponse"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/user/updateprofile": {
            "post": {
                "description": "Update user profile details",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Update User profile details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "X-Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "formData",
                        "name": "request",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "Lists the users for an organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Lists the users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "X-Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by role name",
                        "name": "role_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by organization ID",
                        "name": "org_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/actions.UserListResponse"
                        }
                    }
                }
            }
        },
        "/users/{user_id}/activate": {
            "put": {
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "Activate a user in the organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Activate a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "X-Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "$ref": "#/definitions/types.SimpleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {}
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {}
                    }
                }
            }
        },
        "/users/{user_id}/deactivate": {
            "put": {
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "Deactivate a user in the organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Deactivate a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "X-Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "$ref": "#/definitions/types.SimpleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {}
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {}
                    }
                }
            }
        },
        "/users/{user_id}/sessions": {
            "delete": {
                "description": "Revokes all sessions for a user except the current session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Revoke all user sessions except current",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "X-Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "actions.UserListResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ListUserResponse"
                    }
                }
            }
        },
        "bigbucks_solution_auth_rest-api_controllers_types.Profile": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "bigbucks_solution_auth_rest-api_controllers_types.Role": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "extraAttrs": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "constants.UserStatus": {
            "type": "string",
            "enum": [
                "active",
                "inactive",
                "pending"
            ],
            "x-enum-varnames": [
                "UserStatusActive",
                "UserStatusInactive",
                "UserStatusPending"
            ]
        },
        "controllers.JsonCred": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "recaptcha": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "controllers.RequestPasswordResetToken": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "example@example.com"
                }
            }
        },
        "controllers.ResetPassword": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "types.AuthorizeResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean"
                }
            }
        },
        "types.CheckPermissionBody": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "orgID": {
                    "type": "integer"
                },
                "resource": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                }
            }
        },
        "types.CreatePermissionBody": {
            "type": "object",
            "required": [
                "action",
                "resource",
                "scope"
            ],
            "properties": {
                "action": {
                    "type": "string",
                    "minLength": 3
                },
                "resource": {
                    "type": "string",
                    "minLength": 3
                },
                "scope": {
                    "type": "string",
                    "minLength": 3
                }
            }
        },
        "types.ListRolePermission": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "isHidden": {
                    "type": "boolean"
                },
                "isLocked": {
                    "type": "boolean"
                },
                "resource": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                }
            }
        },
        "types.ListRoleResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "extraAttrs": {
                    "type": "object",
                    "additionalProperties": true
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "userCount": {
                    "type": "integer"
                }
            }
        },
        "types.ListRolesPagedResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ListRoleResponse"
                    }
                },
                "size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "types.ListUserResponse": {
            "type": "object",
            "properties": {
                "activeSessions": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastLogin": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RoleWithId"
                    }
                },
                "status": {
                    "$ref": "#/definitions/constants.UserStatus"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "types.RolePermissionBindingBody": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "resource": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                }
            }
        },
        "types.RoleWithId": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "types.SignupRequestBody": {
            "type": "object",
            "required": [
                "email",
                "firstName",
                "lastName",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "types.SimpleResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "message"
                }
            }
        },
        "types.UserInfo": {
            "type": "object",
            "properties": {
                "isSocialAccount": {
                    "type": "boolean"
                },
                "profile": {
                    "$ref": "#/definitions/bigbucks_solution_auth_rest-api_controllers_types.Profile"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bigbucks_solution_auth_rest-api_controllers_types.Role"
                    }
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "types.UserRoleBindingBody": {
            "type": "object",
            "required": [
                "orgId",
                "roleId",
                "userId"
            ],
            "properties": {
                "orgId": {
                    "type": "string"
                },
                "roleId": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "JWTAuth": {
            "type": "apiKey",
            "name": "X-Auth",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.1",
	Host:             "localhost:8000",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "BigBucks Solutions Auth Engine",
	Description:      "This is REST api definitions.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
