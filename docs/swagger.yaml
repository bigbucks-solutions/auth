basePath: /api/v1
definitions:
  actions.UserListResponse:
    properties:
      page:
        type: integer
      page_size:
        type: integer
      total:
        type: integer
      users:
        items:
          $ref: '#/definitions/types.ListUserResponse'
        type: array
    type: object
  bigbucks_solution_auth_rest-api_controllers_types.Profile:
    properties:
      avatar:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      phone:
        type: string
    type: object
  bigbucks_solution_auth_rest-api_controllers_types.Role:
    properties:
      description:
        type: string
      extraAttrs:
        additionalProperties: true
        type: object
      name:
        type: string
    required:
    - name
    type: object
  constants.UserStatus:
    enum:
    - active
    - inactive
    - pending
    type: string
    x-enum-varnames:
    - UserStatusActive
    - UserStatusInactive
    - UserStatusPending
  controllers.JsonCred:
    properties:
      password:
        type: string
      recaptcha:
        type: string
      username:
        type: string
    type: object
  controllers.RequestPasswordResetToken:
    properties:
      email:
        example: example@example.com
        type: string
    type: object
  controllers.ResetPassword:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  types.AuthorizeResponse:
    properties:
      status:
        type: boolean
    type: object
  types.CheckPermissionBody:
    properties:
      action:
        type: string
      orgID:
        type: integer
      resource:
        type: string
      scope:
        type: string
    type: object
  types.CreatePermissionBody:
    properties:
      action:
        minLength: 3
        type: string
      resource:
        minLength: 3
        type: string
      scope:
        minLength: 3
        type: string
    required:
    - action
    - resource
    - scope
    type: object
  types.ListRolePermission:
    properties:
      action:
        type: string
      isHidden:
        type: boolean
      isLocked:
        type: boolean
      resource:
        type: string
      scope:
        type: string
    type: object
  types.ListRoleResponse:
    properties:
      description:
        type: string
      extraAttrs:
        additionalProperties: true
        type: object
      id:
        type: string
      name:
        type: string
      userCount:
        type: integer
    type: object
  types.ListRolesPagedResponse:
    properties:
      page:
        type: integer
      roles:
        items:
          $ref: '#/definitions/types.ListRoleResponse'
        type: array
      size:
        type: integer
      total:
        type: integer
    type: object
  types.ListUserResponse:
    properties:
      activeSessions:
        type: integer
      email:
        type: string
      firstName:
        type: string
      id:
        type: string
      lastLogin:
        type: string
      lastName:
        type: string
      roles:
        items:
          $ref: '#/definitions/types.RoleWithId'
        type: array
      status:
        $ref: '#/definitions/constants.UserStatus'
      username:
        type: string
    type: object
  types.RolePermissionBindingBody:
    properties:
      action:
        type: string
      resource:
        type: string
      role_id:
        type: string
      scope:
        type: string
    type: object
  types.RoleWithId:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  types.SignupRequestBody:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - firstName
    - lastName
    - password
    type: object
  types.SimpleResponse:
    properties:
      message:
        example: message
        type: string
    type: object
  types.UserInfo:
    properties:
      isSocialAccount:
        type: boolean
      profile:
        $ref: '#/definitions/bigbucks_solution_auth_rest-api_controllers_types.Profile'
      roles:
        items:
          $ref: '#/definitions/bigbucks_solution_auth_rest-api_controllers_types.Role'
        type: array
      username:
        type: string
    type: object
  types.UserRoleBindingBody:
    properties:
      orgId:
        type: string
      roleId:
        type: string
      userId:
        type: string
    required:
    - orgId
    - roleId
    - userId
    type: object
host: localhost:8000
info:
  contact:
    email: jamsheed@nsmail.dev
    name: Jamsheed
    url: http://www.swagger.io/support
  description: This is REST api definitions.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: BigBucks Solutions Auth Engine
  version: 0.0.1
paths:
  /master-data/actions:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authorization
        in: header
        name: X-Auth
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      security:
      - JWTAuth: []
      - JWTAuth: []
      summary: Get actions
      tags:
      - permissions
  /master-data/resources:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authorization
        in: header
        name: X-Auth
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      security:
      - JWTAuth: []
      - JWTAuth: []
      summary: Get resources
      tags:
      - permissions
  /master-data/scopes:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authorization
        in: header
        name: X-Auth
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      security:
      - JWTAuth: []
      - JWTAuth: []
      summary: Get scopes
      tags:
      - permissions
  /me:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authorization
        in: header
        name: X-Auth
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User details
          schema:
            $ref: '#/definitions/types.UserInfo'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - JWTAuth: []
      summary: Get logged in user profile information
      tags:
      - auth
  /permissions:
    post:
      consumes:
      - application/json
      description: Create a new permission in the system
      parameters:
      - description: Authorization
        in: header
        name: X-Auth
        required: true
        type: string
      - description: Permission object
        in: body
        name: permission
        required: true
        schema:
          $ref: '#/definitions/types.CreatePermissionBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
      security:
      - JWTAuth: []
      summary: Create new permission
      tags:
      - permissions
  /roles:
    get:
      consumes:
      - application/json
      description: Get paginated list of roles with user count
      parameters:
      - description: Authorization
        in: header
        name: X-Auth
        required: true
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: page_size
        type: integer
      - description: Filter by role name
        in: query
        name: role_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ListRolesPagedResponse'
      security:
      - JWTAuth: []
      summary: List roles
      tags:
      - roles
    post:
      consumes:
      - application/json
      description: Create a new role in the system
      parameters:
      - description: Authorization
        in: header
        name: X-Auth
        required: true
        type: string
      - description: Role object
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/bigbucks_solution_auth_rest-api_controllers_types.Role'
      produces:
      - application/json
      responses:
        "201":
          description: Created
      security:
      - JWTAuth: []
      summary: Create new role
      tags:
      - roles
  /roles/:role_id/permissions:
    post:
      consumes:
      - application/json
      description: Lists permissions of a role
      parameters:
      - description: Authorization
        in: header
        name: X-Auth
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.ListRolePermission'
            type: array
      security:
      - JWTAuth: []
      summary: List permission of a role
      tags:
      - roles
  /roles/bind-permission:
    post:
      consumes:
      - application/json
      description: Associates a permission with a role
      parameters:
      - description: Authorization
        in: header
        name: X-Auth
        required: true
        type: string
      - description: Binding details
        in: body
        name: rolepermission
        required: true
        schema:
          $ref: '#/definitions/types.RolePermissionBindingBody'
      produces:
      - application/json
      responses:
        "200":
          description: Permission bound successfully
          schema:
            type: string
      security:
      - JWTAuth: []
      summary: Bind permission to role
      tags:
      - roles
  /roles/bind-user:
    post:
      consumes:
      - application/json
      description: Associates a role with a user in an organization
      parameters:
      - description: Authorization
        in: header
        name: X-Auth
        required: true
        type: string
      - description: User role binding details
        in: body
        name: binding
        required: true
        schema:
          $ref: '#/definitions/types.UserRoleBindingBody'
      produces:
      - application/json
      responses:
        "200":
          description: Role bound to user successfully
          schema:
            type: string
      security:
      - JWTAuth: []
      summary: Bind role to user
      tags:
      - roles
  /roles/unbind-permission:
    post:
      consumes:
      - application/json
      description: Removes a permission with a role
      parameters:
      - description: Authorization
        in: header
        name: X-Auth
        required: true
        type: string
      - description: UnBinding details
        in: body
        name: rolepermission
        required: true
        schema:
          $ref: '#/definitions/types.RolePermissionBindingBody'
      produces:
      - application/json
      responses:
        "200":
          description: Permission unbound successfully
          schema:
            type: string
      security:
      - JWTAuth: []
      summary: UnBind permission to role
      tags:
      - roles
  /roles/unbind-user:
    post:
      consumes:
      - application/json
      description: Removes a role with a user in an organization
      parameters:
      - description: Authorization
        in: header
        name: X-Auth
        required: true
        type: string
      - description: User role binding details
        in: body
        name: binding
        required: true
        schema:
          $ref: '#/definitions/types.UserRoleBindingBody'
      produces:
      - application/json
      responses:
        "200":
          description: Role bound to user successfully
          schema:
            type: string
      security:
      - JWTAuth: []
      summary: UnBind role to user
      tags:
      - roles
  /sessions/{session_id}:
    delete:
      consumes:
      - application/json
      description: Revokes a specific session by session ID
      parameters:
      - description: Authorization
        in: header
        name: X-Auth
        required: true
        type: string
      - description: Session ID to revoke
        in: path
        name: session_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - JWTAuth: []
      summary: Revoke a specific user session
      tags:
      - auth
  /sessions/users/{user_id}:
    get:
      consumes:
      - application/json
      description: List User sessions for provided userId
      parameters:
      - description: Authorization
        in: header
        name: X-Auth
        required: true
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: list of user sessions
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - JWTAuth: []
      summary: List User session for provided userId
      tags:
      - auth
  /signin:
    post:
      consumes:
      - application/json
      description: Authenticate user with password and issue jwt token
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.JsonCred'
      produces:
      - application/json
      responses:
        "200":
          description: JWT token
          schema:
            type: string
        "400":
          description: Bad request
          schema: {}
        "404":
          description: Not found
          schema: {}
        "500":
          description: Internal server error
          schema: {}
      summary: Authenticate with username and pssword
      tags:
      - auth
  /signup:
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - description: User signup details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.SignupRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: Success message
          schema:
            $ref: '#/definitions/types.SimpleResponse'
        "400":
          description: Bad request
          schema: {}
        "404":
          description: Not found
          schema: {}
        "500":
          description: Internal server error
          schema: {}
      summary: Register a new user
      tags:
      - auth
  /user/authorize:
    post:
      consumes:
      - application/json
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.CheckPermissionBody'
      - description: Authorization
        in: header
        name: X-Auth
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.AuthorizeResponse'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - JWTAuth: []
      summary: Check user have permission
      tags:
      - auth
  /user/changepassword/{token}:
    post:
      consumes:
      - application/json
      description: Reset the password with the password reset token sent to email
      parameters:
      - description: token
        in: path
        name: token
        required: true
        type: string
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.ResetPassword'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Reset the password with the password reset token sent
      tags:
      - auth
  /user/reset:
    post:
      consumes:
      - application/json
      description: Get password reset token to email
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.RequestPasswordResetToken'
      produces:
      - application/json
      responses:
        "200":
          description: return message
          schema:
            $ref: '#/definitions/types.SimpleResponse'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Send the password reset token
      tags:
      - auth
  /user/updateprofile:
    post:
      consumes:
      - multipart/form-data
      description: Update user profile details
      parameters:
      - description: Authorization
        in: header
        name: X-Auth
        required: true
        type: string
      - description: formData
        in: formData
        name: request
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - JWTAuth: []
      summary: Update User profile details
      tags:
      - auth
  /users:
    get:
      consumes:
      - application/json
      description: Lists the users for an organization
      parameters:
      - description: Authorization
        in: header
        name: X-Auth
        required: true
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: page_size
        type: integer
      - description: Filter by role name
        in: query
        name: role_id
        type: string
      - description: Filter by organization ID
        in: query
        name: org_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/actions.UserListResponse'
      security:
      - JWTAuth: []
      - JWTAuth: []
      summary: Lists the users
      tags:
      - auth
  /users/{user_id}/sessions:
    delete:
      consumes:
      - application/json
      description: Revokes all sessions for a user except the current session
      parameters:
      - description: Authorization
        in: header
        name: X-Auth
        required: true
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - JWTAuth: []
      summary: Revoke all user sessions except current
      tags:
      - auth
securityDefinitions:
  JWTAuth:
    in: header
    name: X-Auth
    type: apiKey
swagger: "2.0"
