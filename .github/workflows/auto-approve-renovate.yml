name: Auto-approve Renovate PRs

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write
  checks: read
  actions: read

jobs:
  auto-approve:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    # Only target safe updates from Renovate
    if: >
      github.event.pull_request.user.login == 'renovate[bot]' &&
      (startsWith(github.event.pull_request.title, 'fix(deps):') ||
       startsWith(github.event.pull_request.title, 'chore(deps):') ||
       startsWith(github.event.pull_request.title, 'chore(deps-dev):') ||
       (startsWith(github.event.pull_request.title, 'Update ') &&
        !contains(github.event.pull_request.title, 'major')))
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      # CRUCIAL: Wait for CI checks to complete first
      - name: Wait for CI checks to complete
        uses: lewagon/wait-on-check-action@v1.4.1
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 30
          running-workflow-name: 'auto-approve'

      # Check if PR is already approved
      - name: Check if PR is already approved
        id: check_approved
        run: |
          # Get PR review status
          reviews=$(gh pr view ${{ github.event.pull_request.number }} --json reviews -q '.reviews[].state')
          if echo "$reviews" | grep -q "APPROVED"; then
            echo "PR is already approved, skipping approval"
            echo "already_approved=true" >> $GITHUB_OUTPUT
          else
            echo "PR needs approval"
            echo "already_approved=false" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Only approve if CI passes and PR is not already approved
      - name: Approve PR and enable auto-merge
        if: success() && steps.check_approved.outputs.already_approved != 'true'
        run: |
          # Approve the PR
          gh pr review --approve ${{ github.event.pull_request.number }}
          # Enable auto-merge
          gh pr merge --auto --merge ${{ github.event.pull_request.number }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
